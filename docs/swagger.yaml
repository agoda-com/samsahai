definitions:
  v1.ActivePromotion:
    properties:
      spec:
        $ref: '#/definitions/v1.ActivePromotionSpec'
        type: object
      status:
        $ref: '#/definitions/v1.ActivePromotionStatus'
        type: object
    type: object
  v1.ActivePromotionCondition:
    properties:
      lastTransitionTime:
        description: +optional
        type: string
      message:
        description: +optional
        type: string
      reason:
        description: +optional
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  v1.ActivePromotionHistory:
    properties:
      spec:
        $ref: '#/definitions/v1.ActivePromotionHistorySpec'
        type: object
      status:
        $ref: '#/definitions/v1.ActivePromotionHistoryStatus'
        type: object
    type: object
  v1.ActivePromotionHistorySpec:
    properties:
      activePromotion:
        $ref: '#/definitions/v1.ActivePromotion'
        type: object
      createdAt:
        description: 'TODO: store values file of all components'
        type: string
      isSuccess:
        type: boolean
      teamName:
        type: string
    type: object
  v1.ActivePromotionHistoryStatus:
    type: object
  v1.ActivePromotionSpec:
    properties:
      noOfRetry:
        description: |-
          NoOfRetry represents how many times this active promotion process has been run
          +optional
        type: integer
      promotedBy:
        description: |-
          PromotedBy represents a person who promoted the ActivePromotion
          +optional
        type: string
      skipTestRunner:
        description: |-
          SkipTestRunner represents a flag for skipping running pre-active test
          +optional
        type: boolean
      tearDownDuration:
        description: |-
          TearDownDuration represents duration before tear down the previous active namespace
          +optional
        type: string
    type: object
  v1.ActivePromotionStatus:
    properties:
      activeComponents:
        description: |-
          ActiveComponents represents a list of promoted active components
          +optional
        type: object
      activePromotionHistoryName:
        description: |-
          ActivePromotionHistoryName represents created ActivePromotionHistoryName name
          +optional
        type: string
      conditions:
        description: |-
          Conditions contains observations of the resource's state e.g.,
          Queue deployed, being tested
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.ActivePromotionCondition'
        type: array
      demotionStatus:
        description: |-
          DemotionStatus represents a status of the active demotion
          +optional
        type: string
      destroyedTime:
        description: |-
          DestroyedTime represents time at which the previous active namespace will be destroyed
          +optional
        type: string
      hasOutdatedComponent:
        description: |-
          HasOutdatedComponent defines whether current active promotion has outdated component or not
          +optional
        type: boolean
      isTimeout:
        description: |-
          IsTimeout defines whether the active promotion has been timeout or not
          +optional
        type: boolean
      message:
        description: |-
          Message defines details about why the active promotion is in this condition
          +optional
        type: string
      outdatedComponents:
        description: |-
          OutdatedComponents represents map of outdated components
          +optional
        type: object
      preActiveQueue:
        $ref: '#/definitions/v1.QueueStatus'
        description: |-
          PreActiveQueue represents a pre-active queue status
          +optional
        type: object
      previousActiveNamespace:
        description: |-
          PreviousActiveNamespace represents an active namespace before promoting
          +optional
        type: string
      result:
        description: |-
          Result represents a result of the active promotion
          +optional
        type: string
      rollbackStatus:
        description: |-
          RollbackStatus represents a status of the rollback process
          +optional
        type: string
      startedAt:
        description: |-
          StartedAt represents time at which the active promotion started
          +optional
        type: string
      state:
        description: |-
          ActivePromotionState represents a current state of the active promotion
          +optional
        type: string
      targetNamespace:
        description: |-
          TargetNamespace represents a pre-active namespace
          +optional
        type: string
      updatedAt:
        description: |-
          UpdatedAt represents time at which the active promotion finished
          +optional
        type: string
    type: object
  v1.CommandAndArgs:
    properties:
      args:
        description: +optional
        items:
          type: string
        type: array
      command:
        items:
          type: string
        type: array
    type: object
  v1.Component:
    properties:
      chart:
        $ref: '#/definitions/v1.ComponentChart'
        type: object
      dependencies:
        description: +optional
        items:
          $ref: '#/definitions/v1.Dependency'
        type: array
      image:
        $ref: '#/definitions/v1.ComponentImage'
        type: object
      name:
        type: string
      parent:
        description: +optional
        type: string
      schedules:
        description: +optional
        items:
          type: string
        type: array
      source:
        description: +optional
        type: string
      values:
        $ref: '#/definitions/v1.ComponentValues'
        description: |-
          +optional
          +kubebuilder:pruning:PreserveUnknownFields
        type: object
    type: object
  v1.ComponentChart:
    properties:
      name:
        type: string
      repository:
        type: string
      version:
        description: +optional
        type: string
    type: object
  v1.ComponentImage:
    properties:
      pattern:
        description: +optional
        type: string
      repository:
        type: string
      tag:
        description: +optional
        type: string
    type: object
  v1.ComponentValues:
    additionalProperties:
      type: object
    type: object
  v1.ConfigActivePromotion:
    properties:
      demotionTimeout:
        description: |-
          DemotionTimeout defines maximum duration for doing active demotion
          +optional
        type: string
      deployment:
        $ref: '#/definitions/v1.ConfigDeploy'
        description: |-
          Deployment represents configuration about deploy
          +optional
        type: object
      maxHistories:
        description: |-
          MaxHistories defines maximum length of ActivePromotionHistory stored per team
          +optional
        type: integer
      maxRetry:
        description: |-
          MaxRetry defines max retry counts of active promotion process in case failure
          +optional
        type: integer
      outdatedNotification:
        $ref: '#/definitions/v1.OutdatedNotification'
        description: |-
          OutdatedNotification defines a configuration of outdated notification
          +optional
        type: object
      rollbackTimeout:
        description: |-
          RollbackTimeout defines maximum duration for rolling back active promotion
          +optional
        type: string
      tearDownDuration:
        description: |-
          TearDownDuration defines duration before teardown the previous active namespace
          +optional
        type: string
      timeout:
        description: |-
          Timeout defines maximum duration for doing active promotion
          +optional
        type: string
    type: object
  v1.ConfigBundles:
    additionalProperties:
      items: {}
      type: array
    type: object
  v1.ConfigComponentUpgradeReport:
    properties:
      criteria:
        description: +optional
        type: string
      interval:
        description: +optional
        type: string
    type: object
  v1.ConfigDeploy:
    properties:
      componentCleanupTimeout:
        description: |-
          ComponentCleanupTimeout defines timeout duration of component cleaning up
          +optional
        type: string
      engine:
        description: |-
          Engine defines method of deploying

          mock - for test only, always return success

          helm3 - deploy chart with helm3
          +optional
        type: string
      testRunner:
        $ref: '#/definitions/v1.ConfigTestRunner'
        description: |-
          TestRunner represents configuration about test
          +optional
        type: object
      timeout:
        description: |-
          Timeout defines maximum duration for deploying environment
          +optional
        type: string
    type: object
  v1.ConfigPullRequest:
    properties:
      bundles:
        description: Bundles represents a bundle of pull request components configuration
        items:
          $ref: '#/definitions/v1.PullRequestBundle'
        type: array
      concurrences:
        description: |-
          Concurrences defines a parallel number of pull request queue
          +optional
        type: integer
      maxHistoryDays:
        description: |-
          MaxHistoryDays defines maximum days of PullRequestQueueHistory stored
          +optional
        type: integer
      maxRetry:
        description: |-
          MaxRetry defines max retry counts of pull request component upgrade
          +optional
        type: integer
      resources:
        description: |-
          Resources represents how many resources of pull request namespace
          +optional
        type: string
      trigger:
        $ref: '#/definitions/v1.PullRequestTriggerConfig'
        description: |-
          Trigger represents a pull request trigger configuration
          +optional
        type: object
    type: object
  v1.ConfigPullRequestQueueReport:
    properties:
      criteria:
        description: +optional
        type: string
      interval:
        description: +optional
        type: string
    type: object
  v1.ConfigPullRequestTriggerReport:
    properties:
      criteria:
        description: +optional
        type: string
    type: object
  v1.ConfigReporter:
    properties:
      cmd:
        $ref: '#/definitions/v1.ReporterShell'
        description: +optional
        type: object
      github:
        $ref: '#/definitions/v1.ReporterGithub'
        description: +optional
        type: object
      msTeams:
        $ref: '#/definitions/v1.ReporterMSTeams'
        description: +optional
        type: object
      optionals:
        description: +optional
        items:
          $ref: '#/definitions/v1.ReportOption'
        type: array
      reportMock:
        description: +optional
        type: boolean
      rest:
        $ref: '#/definitions/v1.ReporterRest'
        description: +optional
        type: object
      slack:
        $ref: '#/definitions/v1.ReporterSlack'
        description: +optional
        type: object
    type: object
  v1.ConfigSpec:
    properties:
      activePromotion:
        $ref: '#/definitions/v1.ConfigActivePromotion'
        description: |-
          ActivePromotion represents configuration about active promotion
          +optional
        type: object
      bundles:
        $ref: '#/definitions/v1.ConfigBundles'
        description: |-
          Bundles represents a group of component for each bundle
          +optional
        type: object
      components:
        description: |-
          Components represents all components that are managed
          +optional
        items:
          $ref: '#/definitions/v1.Component'
        type: array
      envs:
        description: |-
          Envs represents urls of values file per environments
          ordering by less priority to high priority
          +optional
        type: object
      priorityQueues:
        description: |-
          PriorityQueues represents a list of bundles/components' name which needs to be prioritized
          the first one has the highest priority and the last one has the lowest priority
          +optional
        items:
          type: string
        type: array
      pullRequest:
        $ref: '#/definitions/v1.ConfigPullRequest'
        description: |-
          PullRequest represents configuration about pull request
          +optional
        type: object
      report:
        $ref: '#/definitions/v1.ConfigReporter'
        description: |-
          Reporter represents configuration about reporter
          +optional
        type: object
      staging:
        $ref: '#/definitions/v1.ConfigStaging'
        description: |-
          Staging represents configuration about staging
          +optional
        type: object
      template:
        description: |-
          Template represents configuration's template
          +optional
        type: string
    type: object
  v1.ConfigStaging:
    properties:
      deployment:
        $ref: '#/definitions/v1.ConfigDeploy'
        description: |-
          Deployment represents configuration about deploy
          +optional
        type: object
      maxHistoryDays:
        description: |-
          MaxHistoryDays defines maximum days of QueueHistory stored
          +optional
        type: integer
      maxRetry:
        description: |-
          MaxRetry defines max retry counts of component upgrade
          +optional
        type: integer
    type: object
  v1.ConfigTeamcity:
    properties:
      branch:
        type: string
      buildTypeID:
        type: string
    type: object
  v1.ConfigTestMock:
    properties:
      result:
        type: boolean
    type: object
  v1.ConfigTestRunner:
    properties:
      pollingTime:
        description: +optional
        type: string
      teamcity:
        $ref: '#/definitions/v1.ConfigTeamcity'
        description: +optional
        type: object
      testMock:
        $ref: '#/definitions/v1.ConfigTestMock'
        description: +optional
        type: object
      timeout:
        description: +optional
        type: string
    type: object
  v1.Credential:
    properties:
      github:
        $ref: '#/definitions/v1.TokenCredential'
        description: |-
          Github
          +optional
        type: object
      secretName:
        description: SecretName
        type: string
      teamcity:
        $ref: '#/definitions/v1.UsernamePasswordCredential'
        description: |-
          Teamcity
          +optional
        type: object
    type: object
  v1.Dependency:
    properties:
      chart:
        $ref: '#/definitions/v1.ComponentChart'
        description: +optional
        type: object
      image:
        $ref: '#/definitions/v1.ComponentImage'
        type: object
      name:
        type: string
      parent:
        description: +optional
        type: string
      schedules:
        description: +optional
        items:
          type: string
        type: array
      source:
        description: +optional
        type: string
      values:
        $ref: '#/definitions/v1.ComponentValues'
        description: |-
          +optional
          +kubebuilder:pruning:PreserveUnknownFields
        type: object
    type: object
  v1.DeploymentIssue:
    properties:
      failureComponents:
        description: FailureComponents defines a list of failure components
        items:
          $ref: '#/definitions/v1.FailureComponent'
        type: array
      issueType:
        description: IssueType defines a deployment issue type
        type: string
    type: object
  v1.Endpoint:
    properties:
      url:
        type: string
    type: object
  v1.FailureComponent:
    properties:
      componentName:
        description: ComponentName defines a name of component
        type: string
      firstFailureContainerName:
        description: FirstFailureContainerName defines a first found failure container
          name
        type: string
      nodeName:
        description: NodeName defines the node name of pod
        type: string
      restartCount:
        description: RestartCount defines the number of times the container has been
          restarted
        type: integer
    type: object
  v1.Image:
    properties:
      repository:
        type: string
      tag:
        type: string
    type: object
  v1.MSTeamsGroup:
    properties:
      channelNameOrIDs:
        items:
          type: string
        type: array
      groupNameOrID:
        type: string
    type: object
  v1.OutdatedNotification:
    properties:
      exceedDuration:
        description: +optional
        type: string
      excludeWeekendCalculation:
        description: +optional
        type: boolean
    type: object
  v1.PullRequestBundle:
    properties:
      components:
        description: Components represents a list of pull request components which
          are deployed together as a bundle
        items:
          $ref: '#/definitions/v1.PullRequestComponent'
        type: array
      dependencies:
        description: |-
          Dependencies defines a list of components which are required to be deployed together with the main component
          +optional
        items:
          type: string
        type: array
      deployment:
        $ref: '#/definitions/v1.ConfigDeploy'
        description: |-
          Deployment represents configuration about deploy
          +optional
        type: object
      gitRepository:
        description: |-
          GitRepository represents a string of git "<owner>/<repository>" e.g., agoda-com/samsahai
          used for publishing commit status
          +optional
        type: string
      maxRetry:
        description: |-
          MaxRetry defines max retry counts of pull request component upgrade
          +optional
        type: integer
      name:
        description: Name defines a bundle component name, can be any name
        type: string
      resources:
        description: |-
          Resources represents how many resources of pull request namespace
          +optional
        type: string
    type: object
  v1.PullRequestComponent:
    properties:
      dependencies:
        description: |-
          Dependencies defines a list of components which are required to be deployed together with the main component
          +optional
        items:
          type: string
        type: array
      deployment:
        $ref: '#/definitions/v1.ConfigDeploy'
        description: |-
          TODO: pohfy, remove here
          Deployment represents configuration about deploy
          +optional
        type: object
      gitRepository:
        description: |-
          GitRepository represents a string of git "<owner>/<repository>" e.g., agoda-com/samsahai
          used for publishing commit status
          +optional
        type: string
      image:
        $ref: '#/definitions/v1.ComponentImage'
        description: |-
          Image defines an image repository, tag and pattern of pull request component which is a regex of tag
          +optional
        type: object
      maxRetry:
        description: |-
          MaxRetry defines max retry counts of pull request component upgrade
          +optional
        type: integer
      name:
        description: Name defines a main component name which is deployed per pull
          request
        type: string
      resources:
        description: |-
          Resources represents how many resources of pull request namespace
          +optional
        type: string
      source:
        description: |-
          Source defines a source for image repository
          +optional
        type: string
    type: object
  v1.PullRequestQueue:
    properties:
      spec:
        $ref: '#/definitions/v1.PullRequestQueueSpec'
        type: object
      status:
        $ref: '#/definitions/v1.PullRequestQueueStatus'
        type: object
    type: object
  v1.PullRequestQueueCondition:
    properties:
      lastTransitionTime:
        description: +optional
        type: string
      message:
        description: +optional
        type: string
      reason:
        description: +optional
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  v1.PullRequestQueueHistory:
    properties:
      spec:
        $ref: '#/definitions/v1.PullRequestQueueHistorySpec'
        type: object
      status:
        $ref: '#/definitions/v1.PullRequestQueueHistoryStatus'
        type: object
    type: object
  v1.PullRequestQueueHistorySpec:
    properties:
      pullRequestQueue:
        $ref: '#/definitions/v1.PullRequestQueue'
        type: object
    type: object
  v1.PullRequestQueueHistoryStatus:
    type: object
  v1.PullRequestQueueSpec:
    properties:
      bundleName:
        description: BundleName represents a pull request bundle name
        type: string
      commitSHA:
        description: |-
          CommitSHA represents a commit SHA
          +optional
        type: string
      components:
        $ref: '#/definitions/v1.QueueComponents'
        description: |-
          Components represents a list of components which are deployed
          +optional
        type: object
      noOfOrder:
        description: |-
          NoOfOrder defines the position in queue
          lower is will be picked first
        type: integer
      noOfRetry:
        description: |-
          NoOfRetry defines how many times this pull request component has been tested
          +optional
        type: integer
      prNumber:
        description: PRNumber represents a pull request number
        type: string
      teamName:
        description: TeamName represents team owner of the pull request queue
        type: string
      upcomingCommitSHA:
        description: |-
          UpcomingCommitSHA represents an upcoming commit SHA in case queue is running
          +optional
        type: string
      upcomingComponents:
        $ref: '#/definitions/v1.QueueComponents'
        description: |-
          UpcomingComponents represents an upcoming components which are deployed in case queue is running
          +optional
        type: object
    type: object
  v1.PullRequestQueueStatus:
    properties:
      conditions:
        description: |-
          Conditions contains observations of the resource's state e.g.,
          Queue deployed, being tested
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.PullRequestQueueCondition'
        type: array
      createdAt:
        description: CreatedAt represents time when the component has been added to
          queue
        type: string
      deploymentQueue:
        $ref: '#/definitions/v1.Queue'
        description: |-
          ComponentUpgrade defines a deployed pull request queue
          +optional
        type: object
      pullRequestNamespace:
        description: PullRequestNamespace represents a current pull request namespace
        type: string
      pullRequestQueueHistoryName:
        description: |-
          PullRequestQueueHistoryName represents created PullRequestQueueHistory name
          +optional
        type: string
      result:
        description: |-
          Result represents a result of the pull request queue
          +optional
        type: string
      state:
        description: State represents current status of this queue
        type: string
      updatedAt:
        description: UpdatedAt represents time when the component was processed
        type: string
    type: object
  v1.PullRequestTriggerConfig:
    properties:
      maxRetry:
        description: |-
          MaxRetry defines max retry counts of pull request trigger if cannot find image in the registry
          +optional
        type: integer
      pollingTime:
        description: |-
          PollingTime defines a waiting duration time to re-check the pull request image in the registry
          +optional
        type: string
    type: object
  v1.Queue:
    properties:
      spec:
        $ref: '#/definitions/v1.QueueSpec'
        type: object
      status:
        $ref: '#/definitions/v1.QueueStatus'
        type: object
    type: object
  v1.QueueComponent:
    properties:
      name:
        description: Name represents Component name
        type: string
      repository:
        description: Repository represents Docker image repository
        type: string
      version:
        description: Version represents Docker image tag version
        type: string
    type: object
  v1.QueueComponents:
    items:
      properties:
        name:
          description: Name represents Component name
          type: string
        repository:
          description: Repository represents Docker image repository
          type: string
        version:
          description: Version represents Docker image tag version
          type: string
      type: object
    type: array
  v1.QueueCondition:
    properties:
      lastTransitionTime:
        description: +optional
        type: string
      message:
        description: +optional
        type: string
      reason:
        description: +optional
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  v1.QueueHistory:
    properties:
      spec:
        $ref: '#/definitions/v1.QueueHistorySpec'
        type: object
      status:
        $ref: '#/definitions/v1.QueueHistoryStatus'
        type: object
    type: object
  v1.QueueHistorySpec:
    properties:
      appliedValues:
        $ref: '#/definitions/v1.Values'
        type: object
      createdAt:
        type: string
      isDeploySuccess:
        type: boolean
      isReverify:
        type: boolean
      isTestSuccess:
        type: boolean
      queue:
        $ref: '#/definitions/v1.Queue'
        type: object
      stableComponents:
        items:
          $ref: '#/definitions/v1.StableComponent'
        type: array
    type: object
  v1.QueueHistoryStatus:
    type: object
  v1.QueueSpec:
    properties:
      bundle:
        description: |-
          Bundle represents a bundle name of component
          +optional
        type: string
      components:
        $ref: '#/definitions/v1.QueueComponents'
        description: |-
          Components represents a list of components which are deployed
          +optional
        type: object
      name:
        description: Name represents a Component name or bundle name if exist
        type: string
      nextProcessAt:
        description: NextProcessAt represents time to wait for process this queue
        type: string
      noOfOrder:
        description: |-
          NoOfOrder defines the position in queue
          lower is will be picked first
        type: integer
      noOfRetry:
        description: |-
          NoOfRetry defines how many times this component has been tested
          +optional
        type: integer
      prNumber:
        description: |-
          PRNumber represents a pull request number
          +optional
        type: string
      skipTestRunner:
        description: |-
          SkipTestRunner represents a flag for skipping running test
          +optional
        type: boolean
      teamName:
        description: TeamName represents team owner of the queue
        type: string
      type:
        description: Type represents how we will process this queue
        type: string
    type: object
  v1.QueueStatus:
    properties:
      conditions:
        description: |-
          Conditions contains observations of the resource's state e.g.,
          Queue deployed, being tested
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.QueueCondition'
        type: array
      createdAt:
        description: CreatedAt represents time when the component has been added to
          queue
        type: string
      deployEngine:
        description: DeployEngine represents engine using during installation
        type: string
      deploymentIssues:
        description: |-
          DeploymentIssues defines a list of deployment issue types
          +optional
        items:
          $ref: '#/definitions/v1.DeploymentIssue'
        type: array
      imageMissingList:
        description: ImageMissingList defines image missing lists
        items:
          $ref: '#/definitions/v1.Image'
        type: array
      kubeZipLog:
        description: KubeZipLog defines log of k8s resources during deployment in
          base64 zip format
        type: string
      nextProcessAt:
        description: NextProcessAt represents time to wait for process this queue
        type: string
      noOfProcessed:
        description: NoOfProcessed represents how many time that this queue had been
          processed
        type: integer
      queueHistoryName:
        description: QueueHistoryName defines name of history of this queue
        type: string
      startDeployTime:
        description: StartDeployTime represents the time when this queue start deploying
        type: string
      startTestingTime:
        description: StartTestingTime represents the time when this queue start testing
        type: string
      state:
        description: State represents current status of this queue
        type: string
      testRunners:
        $ref: '#/definitions/v1.TestRunner'
        description: TestRunner defines the test runner
        type: object
      updatedAt:
        description: UpdatedAt represents time when the component was processed
        type: string
    type: object
  v1.ReportOption:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  v1.ReporterGithub:
    properties:
      baseURL:
        description: |-
          BaseURL represents a github base url e.g., https://github.com
          +optional
        type: string
      enabled:
        description: |-
          Enabled represents an enabled flag
          +optional
        type: boolean
    type: object
  v1.ReporterMSTeams:
    properties:
      componentUpgrade:
        $ref: '#/definitions/v1.ConfigComponentUpgradeReport'
        description: +optional
        type: object
      groups:
        items:
          $ref: '#/definitions/v1.MSTeamsGroup'
        type: array
      pullRequestQueue:
        $ref: '#/definitions/v1.ConfigPullRequestQueueReport'
        description: +optional
        type: object
      pullRequestTrigger:
        $ref: '#/definitions/v1.ConfigPullRequestTriggerReport'
        description: +optional
        type: object
    type: object
  v1.ReporterRest:
    properties:
      activePromotion:
        $ref: '#/definitions/v1.RestObject'
        description: +optional
        type: object
      componentUpgrade:
        $ref: '#/definitions/v1.RestObject'
        description: +optional
        type: object
      imageMissing:
        $ref: '#/definitions/v1.RestObject'
        description: +optional
        type: object
      pullRequestQueue:
        $ref: '#/definitions/v1.RestObject'
        description: +optional
        type: object
      pullRequestTrigger:
        $ref: '#/definitions/v1.RestObject'
        description: +optional
        type: object
    type: object
  v1.ReporterShell:
    properties:
      activeEnvironmentDeleted:
        $ref: '#/definitions/v1.CommandAndArgs'
        description: +optional
        type: object
      activePromotion:
        $ref: '#/definitions/v1.CommandAndArgs'
        description: +optional
        type: object
      componentUpgrade:
        $ref: '#/definitions/v1.CommandAndArgs'
        description: +optional
        type: object
      imageMissing:
        $ref: '#/definitions/v1.CommandAndArgs'
        description: +optional
        type: object
      pullRequestQueue:
        $ref: '#/definitions/v1.CommandAndArgs'
        description: +optional
        type: object
      pullRequestTrigger:
        $ref: '#/definitions/v1.CommandAndArgs'
        description: +optional
        type: object
    type: object
  v1.ReporterSlack:
    properties:
      channels:
        items:
          type: string
        type: array
      componentUpgrade:
        $ref: '#/definitions/v1.ConfigComponentUpgradeReport'
        description: +optional
        type: object
      pullRequestQueue:
        $ref: '#/definitions/v1.ConfigPullRequestQueueReport'
        description: +optional
        type: object
      pullRequestTrigger:
        $ref: '#/definitions/v1.ConfigPullRequestTriggerReport'
        description: +optional
        type: object
    type: object
  v1.RestObject:
    properties:
      endpoints:
        items:
          $ref: '#/definitions/v1.Endpoint'
        type: array
    type: object
  v1.StableComponent:
    properties:
      spec:
        $ref: '#/definitions/v1.StableComponentSpec'
        type: object
      status:
        $ref: '#/definitions/v1.StableComponentStatus'
        type: object
    type: object
  v1.StableComponentSpec:
    properties:
      name:
        description: Name represents Component name
        type: string
      repository:
        description: Repository represents Docker image repository
        type: string
      updatedBy:
        description: |-
          UpdatedBy represents a person who updated the StableComponent
          +optional
        type: string
      version:
        description: Version represents Docker image tag version
        type: string
    type: object
  v1.StableComponentStatus:
    properties:
      createdAt:
        type: string
      updatedAt:
        type: string
    type: object
  v1.StagingCtrl:
    properties:
      endpoint:
        description: Endpoint represents the staging endpoint endpoint.
        type: string
      image:
        description: Image represents image for run staging controller.
        type: string
      isDeploy:
        description: IsDeploy represents flag to deploy staging controller or not.
        type: boolean
      resources:
        type: string
    type: object
  v1.TeamCondition:
    properties:
      lastTransitionTime:
        description: +optional
        type: string
      message:
        description: +optional
        type: string
      reason:
        description: +optional
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  v1.TeamNamespace:
    properties:
      active:
        description: +optional
        type: string
      preActive:
        description: +optional
        type: string
      previousActive:
        description: +optional
        type: string
      pullRequests:
        description: +optional
        items:
          type: string
        type: array
      staging:
        description: +optional
        type: string
    type: object
  v1.TeamSpec:
    properties:
      credential:
        $ref: '#/definitions/v1.Credential'
        description: |-
          Credential
          +optional
        type: object
      desc:
        description: |-
          Description represents description for this team
          +optional
        type: string
      owners:
        description: |-
          Owners represents contact point of this team
          +optional
        items:
          type: string
        type: array
      resources:
        description: |-
          Resources represents how many resources per namespace for the team
          +optional
        type: string
      stagingCtrl:
        $ref: '#/definitions/v1.StagingCtrl'
        description: |-
          StagingCtrl represents configuration about the staging controller.
          For easier for developing, debugging and testing purposes
          +optional
        type: object
    type: object
  v1.TeamStatus:
    properties:
      activeComponents:
        description: |-
          ActiveComponents represents a list of stable components in active namespace
          +optional
        type: object
      activeDeletedBy:
        description: |-
          ActiveDeletedBy represents a person who deleted the Active environment
          +optional
        type: string
      activePromotedBy:
        description: |-
          ActivePromotedBy represents a person who promoted the ActivePromotion
          +optional
        type: string
      conditions:
        description: |-
          Conditions contains observations of the resource's state e.g.,
          Team namespace is created, destroyed
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.TeamCondition'
        type: array
      desiredComponentImageCreatedTime:
        description: |-
          DesiredComponentImageCreatedTime represents mapping of desired component image and created time
          map[componentName][repository:tag] = image and createdTime
          +optional
          +kubebuilder:pruning:PreserveUnknownFields
        type: object
      namespace:
        $ref: '#/definitions/v1.TeamNamespace'
        description: +optional
        type: object
      stableComponents:
        description: |-
          StableComponentList represents a list of stable components
          +optional
        type: object
      syncTemplate:
        description: |-
          SyncTemplate represents whether the team has been synced to the template or not
          +optional
        type: boolean
      templateUID:
        description: |-
          TemplateUID represents the template update ID
          +optional
        type: string
      used:
        $ref: '#/definitions/v1.TeamSpec'
        description: |-
          Used represents overridden team specification
          +optional
        type: object
    type: object
  v1.Teamcity:
    properties:
      branch:
        type: string
      buildID:
        type: string
      buildNumber:
        type: string
      buildTypeID:
        type: string
      buildURL:
        type: string
    type: object
  v1.TestRunner:
    properties:
      teamcity:
        $ref: '#/definitions/v1.Teamcity'
        type: object
    type: object
  v1.TokenCredential:
    properties:
      token:
        type: string
    type: object
  v1.UsernamePasswordCredential:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  v1.Values:
    additionalProperties:
      type: object
    type: object
  webhook.Components:
    properties:
      name:
        type: string
      tag:
        type: string
    type: object
  webhook.activePromotion:
    properties:
      inQueues:
        description: +Optional
        example:
        - team1
        - team2
        items:
          type: string
        type: array
      running:
        description: +Optional
        items:
          $ref: '#/definitions/v1.ActivePromotion'
        type: array
    type: object
  webhook.activePromotionHistories:
    items:
      properties:
        spec:
          $ref: '#/definitions/v1.ActivePromotionHistorySpec'
          type: object
        status:
          $ref: '#/definitions/v1.ActivePromotionHistoryStatus'
          type: object
      type: object
    type: array
  webhook.errResp:
    properties:
      error:
        type: string
    type: object
  webhook.healthCheckJSON:
    properties:
      msg:
        example: ok
        type: string
    type: object
  webhook.newComponentEventJSON:
    properties:
      component:
        type: string
      repository:
        type: string
      teamName:
        type: string
    type: object
  webhook.pullRequestWebhookEventJSON:
    properties:
      bundleName:
        type: string
      commitSHA:
        type: string
      components:
        items:
          $ref: '#/definitions/webhook.Components'
        type: array
      prNumber:
        type: string
    type: object
  webhook.teamActivePromotion:
    properties:
      current:
        $ref: '#/definitions/v1.ActivePromotion'
        description: +Optional
        type: object
      historyNames:
        description: +Optional
        example:
        - team1-20191010-080000
        - team1-20191009-080000
        items:
          type: string
        type: array
    type: object
  webhook.teamComponentsJSON:
    additionalProperties:
      properties:
        chart:
          $ref: '#/definitions/v1.ComponentChart'
          type: object
        dependencies:
          description: +optional
          items:
            $ref: '#/definitions/v1.Dependency'
          type: array
        image:
          $ref: '#/definitions/v1.ComponentImage'
          type: object
        name:
          type: string
        parent:
          description: +optional
          type: string
        schedules:
          description: +optional
          items:
            type: string
          type: array
        source:
          description: +optional
          type: string
        values:
          $ref: '#/definitions/v1.ComponentValues'
          description: |-
            +optional
            +kubebuilder:pruning:PreserveUnknownFields
          type: object
      type: object
    type: object
  webhook.teamEnvConnections:
    properties:
      active:
        description: +optional
        type: object
      preActive:
        description: +optional
        type: object
      pullRequest:
        description: |-
          PullRequest represents connection strings of all pull request environments
          +optional
        type: object
      staging:
        description: +optional
        type: object
    type: object
  webhook.teamJSON:
    properties:
      active:
        description: +optional
        type: string
      connections:
        $ref: '#/definitions/webhook.teamEnvConnections'
        type: object
      preActive:
        description: +optional
        type: string
      previousActive:
        description: +optional
        type: string
      pullRequests:
        description: +optional
        items:
          type: string
        type: array
      spec:
        $ref: '#/definitions/v1.TeamSpec'
        type: object
      staging:
        description: +optional
        type: string
      status:
        $ref: '#/definitions/v1.TeamStatus'
        type: object
      teamName:
        type: string
    type: object
  webhook.teamPRQueueJSON:
    properties:
      current:
        $ref: '#/definitions/v1.PullRequestQueue'
        description: +Optional
        type: object
      historyNames:
        items:
          type: string
        type: array
      noOfQueue:
        description: +optional
        type: integer
      queues:
        description: +Optional
        items:
          $ref: '#/definitions/v1.PullRequestQueue'
        type: array
    type: object
  webhook.teamQueueJSON:
    properties:
      current:
        $ref: '#/definitions/v1.Queue'
        description: +Optional
        type: object
      historyNames:
        items:
          type: string
        type: array
      noOfQueue:
        description: +optional
        type: integer
      queues:
        description: +Optional
        items:
          $ref: '#/definitions/v1.Queue'
        type: array
    type: object
  webhook.teamsJSON:
    properties:
      teams:
        items:
          type: string
        type: array
    type: object
  webhook.versionJSON:
    properties:
      gitCommit:
        type: string
      version:
        type: string
    type: object
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /activepromotions:
    get:
      description: get current active promotions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webhook.activePromotion'
        "500":
          description: cannot get activepromotions
          schema:
            $ref: '#/definitions/webhook.errResp'
      summary: get current active promotions
      tags:
      - GET
  /healthz:
    get:
      consumes:
      - application/json
      description: Endpoint for server health check
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webhook.healthCheckJSON'
      summary: Health check
      tags:
      - GET
  /teams:
    get:
      description: Returns a list of teams that currently running on Samsahai.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webhook.teamsJSON'
      summary: Get Teams
      tags:
      - GET
  /teams/{team}:
    get:
      description: Returns team information. (namespaces, connections)
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webhook.teamJSON'
        "404":
          description: Team not found
          schema:
            $ref: '#/definitions/webhook.errResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/webhook.errResp'
      summary: Get Team
      tags:
      - GET
  /teams/{team}/activepromotions:
    get:
      description: get active promotions by team name
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webhook.teamActivePromotion'
        "404":
          description: team {team} not found
          schema:
            type: string
        "500":
          description: cannot get activepromotion/activepromotion histories of team
            {team}
          schema:
            type: string
      summary: get active promotions by team name
      tags:
      - GET
  /teams/{team}/activepromotions/histories:
    get:
      description: get active promotion histories by team name
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webhook.activePromotionHistories'
        "400":
          description: team should not be empty
          schema:
            type: string
        "500":
          description: cannot get activepromotion histories of team {team}
          schema:
            type: string
      summary: get active promotion histories by team name
      tags:
      - GET
  /teams/{team}/activepromotions/histories/{history}:
    get:
      description: get active promotion history by team and history name
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      - description: Active promotion history name
        in: path
        name: history
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: team/history should not be empty
          schema:
            type: string
        "404":
          description: activepromotion history {history} of team {team} not found
          schema:
            type: string
        "500":
          description: cannot get activepromotion history {history} of team {team}
          schema:
            type: string
      summary: get active promotion history by team and history name
      tags:
      - GET
  /teams/{team}/activepromotions/histories/{history}/log:
    get:
      description: Returns zip log file of the active promotion history
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      - description: Active promotion history name
        in: path
        name: history
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: team/history should not be empty
          schema:
            type: string
        "404":
          description: activepromotion history {history} of team {team} not found
          schema:
            type: string
        "500":
          description: cannot get activepromotion history {history} of team {team}
          schema:
            type: string
      summary: Get zip log of active promotion history
      tags:
      - GET
  /teams/{team}/components:
    get:
      description: Returns list of components of team
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webhook.teamComponentsJSON'
        "404":
          description: Team not found
          schema:
            $ref: '#/definitions/webhook.errResp'
      summary: Get Team Component
      tags:
      - GET
  /teams/{team}/components/{component}/values:
    get:
      description: get team stable component values
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      - description: Component name
        in: path
        name: component
        required: true
        type: string
      - description: Accept
        enum:
        - application/json
        - application/x-yaml
        in: header
        name: accept
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Component not found
          schema:
            $ref: '#/definitions/webhook.errResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/webhook.errResp'
      summary: get team stable component values
      tags:
      - GET
  /teams/{team}/config:
    get:
      description: get team configuration
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      - description: Accept
        enum:
        - application/json
        - application/x-yaml
        in: header
        name: accept
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Team not found
          schema:
            $ref: '#/definitions/webhook.errResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/webhook.errResp'
      summary: get team configuration
      tags:
      - GET
  /teams/{team}/environment/active/delete:
    delete:
      description: Delete the current active namespace.
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      - description: Delete by
        in: query
        name: deleted_by
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: There is no active namespace to destroy
          schema:
            $ref: '#/definitions/webhook.errResp'
        "404":
          description: Team not found
          schema:
            $ref: '#/definitions/webhook.errResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/webhook.errResp'
      summary: Delete the current active namespace
      tags:
      - GET
  /teams/{team}/pullrequest/queue:
    get:
      description: Returns queue information of pull request deployment flow.
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webhook.teamPRQueueJSON'
        "404":
          description: Team not found
          schema:
            $ref: '#/definitions/webhook.errResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/webhook.errResp'
      summary: Get Team's Pull Request Queues
      tags:
      - GET
  /teams/{team}/pullrequest/queue/histories/{queue}:
    get:
      description: Return pull request queue history of team by id
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      - description: pull request queue history name
        in: path
        name: queue
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.PullRequestQueueHistory'
        "404":
          description: pull request queue history not found
          schema:
            $ref: '#/definitions/webhook.errResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/webhook.errResp'
      summary: Get Team Pull Request Queue History
      tags:
      - GET
  /teams/{team}/pullrequest/queue/histories/{queue}/log:
    get:
      description: Returns zip log file of the pull request queue history
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      - description: pull request queue history name
        in: path
        name: queue
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.PullRequestQueueHistory'
        "404":
          description: pull request queue history not found
          schema:
            $ref: '#/definitions/webhook.errResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/webhook.errResp'
      summary: Get Team Pull Request Queue History Log
      tags:
      - GET
  /teams/{team}/pullrequest/trigger:
    post:
      consumes:
      - application/json
      description: Endpoint for manually triggering pull request deployment
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      - description: Pull Request
        in: body
        name: pullRequestWebhookEventJSON
        required: true
        schema:
          $ref: '#/definitions/webhook.pullRequestWebhookEventJSON'
          type: object
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Invalid JSON
          schema:
            $ref: '#/definitions/webhook.errResp'
        "500":
          description: Internal Server Errors
          schema:
            $ref: '#/definitions/webhook.errResp'
      summary: Webhook For Pull Request Deployment
      tags:
      - POST
  /teams/{team}/queue:
    get:
      description: Returns queue information of new component upgrading flow.
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webhook.teamQueueJSON'
        "404":
          description: Team not found
          schema:
            $ref: '#/definitions/webhook.errResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/webhook.errResp'
      summary: Get Team's Queues
      tags:
      - GET
  /teams/{team}/queue/histories/{queue}:
    get:
      description: Return queue history of team by id
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      - description: Queue history name
        in: path
        name: queue
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.QueueHistory'
        "404":
          description: Queue history not found
          schema:
            $ref: '#/definitions/webhook.errResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/webhook.errResp'
      summary: Get Team Queue History
      tags:
      - GET
  /teams/{team}/queue/histories/{queue}/log:
    get:
      description: Returns zip log file of the queue history
      parameters:
      - description: Team name
        in: path
        name: team
        required: true
        type: string
      - description: Queue history name
        in: path
        name: queue
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.QueueHistory'
        "404":
          description: Queue history not found
          schema:
            $ref: '#/definitions/webhook.errResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/webhook.errResp'
      summary: Get Team Queue History Log
      tags:
      - GET
  /version:
    get:
      description: Get service version information.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webhook.versionJSON'
      summary: Service Version
      tags:
      - GET
  /webhook/component:
    post:
      consumes:
      - application/json
      description: Endpoint for manually triggering new component update
      parameters:
      - description: New Component
        in: body
        name: newComponentEventJSON
        required: true
        schema:
          $ref: '#/definitions/webhook.newComponentEventJSON'
          type: object
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Invalid JSON
          schema:
            $ref: '#/definitions/webhook.errResp'
      summary: Webhook New Component
      tags:
      - POST
swagger: "2.0"
