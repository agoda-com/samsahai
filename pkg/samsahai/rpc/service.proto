syntax = "proto3";

package samsahai.io.samsahai;
option go_package = "pkg/samsahai/rpc";

service RPC {
    rpc GetTeamActiveNamespace (TeamName) returns (TeamWithNamespace);
    rpc RunPostComponentUpgrade (ComponentUpgrade) returns (Empty);
    rpc RunPostPullRequestQueue (ComponentUpgrade) returns (Empty);
    rpc RunPostPullRequestTrigger (PullRequestTrigger) returns (Empty);
    rpc GetMissingVersions (TeamWithCurrentComponent) returns (ImageList);
    rpc SendUpdateStateQueueMetric (ComponentUpgrade) returns (Empty);
    rpc GetBundleName (TeamWithBundleName) returns (BundleName);
    rpc GetPriorityQueues (TeamName) returns (PriorityQueues);
    rpc GetPullRequestBundleDependencies (TeamWithBundleName) returns (PullRequestDependencies);
    rpc GetPullRequestConfig (TeamWithBundleName) returns (PullRequestConfig);
    rpc GetPullRequestComponentSources (TeamWithPullRequest) returns (ComponentSourceList);
    rpc GetComponentVersion (ComponentSource) returns (ComponentVersion);
    rpc DeployActiveServicesIntoPullRequestEnvironment (TeamWithNamespace) returns (Empty);
    rpc CreatePullRequestEnvironment (TeamWithPullRequest) returns (Empty);
    rpc DestroyPullRequestEnvironment (TeamWithNamespace) returns (Empty);
}

message Empty {
}

message TeamWithBundleName {
    string teamName = 1;
    string bundleName = 2;
}

message BundleName {
    string name = 1;
}

message TeamName {
    string name = 1;
}

message PriorityQueues {
    repeated string queues = 1;
}

message PullRequestDependencies {
    repeated Component dependencies = 1;
}

message ComponentUpgrade {
    enum UpgradeStatus {
        UpgradeStatus_FAILURE = 0;
        UpgradeStatus_SUCCESS = 1;
        UpgradeStatus_CANCELED = 2;
    }
    enum IssueType {
        IssueType_UNKNOWN = 0;
        IssueType_DESIRED_VERSION_FAILED = 1;
        IssueType_IMAGE_MISSING = 2;
        IssueType_ENVIRONMENT_ISSUE = 3;
    }
    enum ReverificationStatus {
        ReverificationStatus_UNKNOWN = 0;
        ReverificationStatus_FAILURE = 1;
        ReverificationStatus_SUCCESS = 2;
    }
    UpgradeStatus status = 1;
    string name = 2;
    string teamName = 3;
    repeated Component components = 4;
    IssueType issueType = 5;
    string queueHistoryName = 6;
    repeated Image imageMissingList = 7;
    string namespace = 8;
    string testBuildTypeID = 9;
    int32 runs = 10;
    bool isReverify = 11;
    ReverificationStatus reverificationStatus = 12;
    repeated DeploymentIssue deploymentIssues = 13;
    TeamWithPullRequest pullRequestComponent = 14;
    string pullRequestNamespace = 15;
}

message Component {
    string name = 1;
    Image image = 2;
}

message Image {
    string repository = 1;
    string tag = 2;
}

message ImageList {
    repeated Image images = 1;
}

message TeamWithCurrentComponent {
    string teamName = 1;
    repeated Component components = 2;
}

message DeploymentIssue {
    string issueType = 1;
    repeated FailureComponent failureComponents = 2;
}

message FailureComponent {
    string componentName = 1;
    string firstFailureContainerName = 2;
    int32 restartCount = 3;
    string nodeName = 4;
}

message TeamWithNamespace {
    string teamName = 1;
    string namespace = 2;
}

message TeamWithPullRequest {
    string teamName = 1;
    string bundleName = 2;
    string PRNumber = 3;
    string commitSHA = 4;
    string namespace = 5;
    int32 maxRetryQueue = 6;
}

message PullRequestConfig {
    int32 concurrences = 1;
    int32 maxRetry = 2;
    int32 maxHistoryDays = 3;
    PullRequestTriggerConfig trigger = 4;
}

message PullRequestTriggerConfig {
    int32 maxRetry = 1;
    string pollingTime = 2;
}

message ComponentSourceList {
    repeated ComponentSource ComponentSources = 1;
}

message ComponentSource {
    string componentName = 1;
    string source = 2;
    string pattern = 3;
    Image image = 4;
}

message ComponentVersion {
    string version = 1;
}

message PullRequestTrigger {
    string name = 1;
    string namespace = 2;
    string teamName = 3;
    string result = 4;
}
